//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/InputController/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Suelo"",
            ""id"": ""76145118-b41c-4f84-a366-a268c8dd5eeb"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""b2519e3b-8e93-4991-9764-25307c6d44d0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""7294d6cc-2db3-47df-bfc8-4c2a644b0b3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""8acf4107-145d-4e0a-a93c-eb67c8e8e6d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hit"",
                    ""type"": ""Button"",
                    ""id"": ""87db7fda-1bb4-4474-ac40-29c5492a62e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shield"",
                    ""type"": ""Button"",
                    ""id"": ""f67afa21-c38b-43c6-9a7c-7acf8cb93d9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hook"",
                    ""type"": ""Button"",
                    ""id"": ""c5715a75-fce8-44e5-9749-6ab3825a2e5c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""2541a501-2396-4489-b961-8e4eedb863bb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a7c962ab-7070-43d6-b3c9-58ec8147868c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9d31f00b-4de2-49fa-b220-1dcf66a6fdc6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d87c6efe-e121-47d8-ae4b-03b72f7aa230"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d566c282-88ce-42dc-bcbf-1724a8d31e97"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7b009da0-4727-4ccd-8340-00c060982b09"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0d294f5-7210-41cf-9617-0cc0439fdd8d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0ca7830-2661-44a9-801f-6ed955fbc804"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a7f2451-c764-493e-be96-9c3d879ec924"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shield"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd639e21-5166-4dc8-b522-5580e609ce56"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Suelo
        m_Suelo = asset.FindActionMap("Suelo", throwIfNotFound: true);
        m_Suelo_Movement = m_Suelo.FindAction("Movement", throwIfNotFound: true);
        m_Suelo_Jump = m_Suelo.FindAction("Jump", throwIfNotFound: true);
        m_Suelo_Shoot = m_Suelo.FindAction("Shoot", throwIfNotFound: true);
        m_Suelo_Hit = m_Suelo.FindAction("Hit", throwIfNotFound: true);
        m_Suelo_Shield = m_Suelo.FindAction("Shield", throwIfNotFound: true);
        m_Suelo_Hook = m_Suelo.FindAction("Hook", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Suelo
    private readonly InputActionMap m_Suelo;
    private ISueloActions m_SueloActionsCallbackInterface;
    private readonly InputAction m_Suelo_Movement;
    private readonly InputAction m_Suelo_Jump;
    private readonly InputAction m_Suelo_Shoot;
    private readonly InputAction m_Suelo_Hit;
    private readonly InputAction m_Suelo_Shield;
    private readonly InputAction m_Suelo_Hook;
    public struct SueloActions
    {
        private @PlayerInputActions m_Wrapper;
        public SueloActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Suelo_Movement;
        public InputAction @Jump => m_Wrapper.m_Suelo_Jump;
        public InputAction @Shoot => m_Wrapper.m_Suelo_Shoot;
        public InputAction @Hit => m_Wrapper.m_Suelo_Hit;
        public InputAction @Shield => m_Wrapper.m_Suelo_Shield;
        public InputAction @Hook => m_Wrapper.m_Suelo_Hook;
        public InputActionMap Get() { return m_Wrapper.m_Suelo; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SueloActions set) { return set.Get(); }
        public void SetCallbacks(ISueloActions instance)
        {
            if (m_Wrapper.m_SueloActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_SueloActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_SueloActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_SueloActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_SueloActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_SueloActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_SueloActionsCallbackInterface.OnJump;
                @Shoot.started -= m_Wrapper.m_SueloActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_SueloActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_SueloActionsCallbackInterface.OnShoot;
                @Hit.started -= m_Wrapper.m_SueloActionsCallbackInterface.OnHit;
                @Hit.performed -= m_Wrapper.m_SueloActionsCallbackInterface.OnHit;
                @Hit.canceled -= m_Wrapper.m_SueloActionsCallbackInterface.OnHit;
                @Shield.started -= m_Wrapper.m_SueloActionsCallbackInterface.OnShield;
                @Shield.performed -= m_Wrapper.m_SueloActionsCallbackInterface.OnShield;
                @Shield.canceled -= m_Wrapper.m_SueloActionsCallbackInterface.OnShield;
                @Hook.started -= m_Wrapper.m_SueloActionsCallbackInterface.OnHook;
                @Hook.performed -= m_Wrapper.m_SueloActionsCallbackInterface.OnHook;
                @Hook.canceled -= m_Wrapper.m_SueloActionsCallbackInterface.OnHook;
            }
            m_Wrapper.m_SueloActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Hit.started += instance.OnHit;
                @Hit.performed += instance.OnHit;
                @Hit.canceled += instance.OnHit;
                @Shield.started += instance.OnShield;
                @Shield.performed += instance.OnShield;
                @Shield.canceled += instance.OnShield;
                @Hook.started += instance.OnHook;
                @Hook.performed += instance.OnHook;
                @Hook.canceled += instance.OnHook;
            }
        }
    }
    public SueloActions @Suelo => new SueloActions(this);
    public interface ISueloActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnHit(InputAction.CallbackContext context);
        void OnShield(InputAction.CallbackContext context);
        void OnHook(InputAction.CallbackContext context);
    }
}
